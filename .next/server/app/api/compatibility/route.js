"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/compatibility/route";
exports.ids = ["app/api/compatibility/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompatibility%2Froute&page=%2Fapi%2Fcompatibility%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompatibility%2Froute.ts&appDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompatibility%2Froute&page=%2Fapi%2Fcompatibility%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompatibility%2Froute.ts&appDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_shaivirau_Skincare_skin_check_app_api_compatibility_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/compatibility/route.ts */ \"(rsc)/./app/api/compatibility/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/compatibility/route\",\n        pathname: \"/api/compatibility\",\n        filename: \"route\",\n        bundlePath: \"app/api/compatibility/route\"\n    },\n    resolvedPagePath: \"/Users/shaivirau/Skincare/skin-check/app/api/compatibility/route.ts\",\n    nextConfigOutput,\n    userland: _Users_shaivirau_Skincare_skin_check_app_api_compatibility_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/compatibility/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjb21wYXRpYmlsaXR5JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb21wYXRpYmlsaXR5JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY29tcGF0aWJpbGl0eSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNoYWl2aXJhdSUyRlNraW5jYXJlJTJGc2tpbi1jaGVjayUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZzaGFpdmlyYXUlMkZTa2luY2FyZSUyRnNraW4tY2hlY2smaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDbUI7QUFDaEc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2luLWNoZWNrLz85NWRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9zaGFpdmlyYXUvU2tpbmNhcmUvc2tpbi1jaGVjay9hcHAvYXBpL2NvbXBhdGliaWxpdHkvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NvbXBhdGliaWxpdHkvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jb21wYXRpYmlsaXR5XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jb21wYXRpYmlsaXR5L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3NoYWl2aXJhdS9Ta2luY2FyZS9za2luLWNoZWNrL2FwcC9hcGkvY29tcGF0aWJpbGl0eS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jb21wYXRpYmlsaXR5L3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompatibility%2Froute&page=%2Fapi%2Fcompatibility%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompatibility%2Froute.ts&appDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/compatibility/route.ts":
/*!****************************************!*\
  !*** ./app/api/compatibility/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\nfunction normalize(out, originalProducts) {\n    // Basic shape validation\n    if (typeof out !== \"object\" || out === null) throw new Error(\"Bad JSON\");\n    // Ensure all required fields exist with defaults\n    const res = {\n        routine_rating: out.routine_rating ? {\n            barrier_safety: Math.max(0, Math.min(5, Math.round(out.routine_rating.barrier_safety || 3))),\n            irritation_risk: Math.max(0, Math.min(5, Math.round(out.routine_rating.irritation_risk || 2))),\n            efficacy: Math.max(0, Math.min(5, Math.round(out.routine_rating.efficacy || 3))),\n            compatibility: Math.max(0, Math.min(5, Math.round(out.routine_rating.compatibility || 3))),\n            long_term_safety: out.routine_rating.long_term_safety ? Math.max(0, Math.min(5, Math.round(out.routine_rating.long_term_safety))) : undefined\n        } : {\n            barrier_safety: 3,\n            irritation_risk: 2,\n            efficacy: 3,\n            compatibility: 3,\n            long_term_safety: 3\n        },\n        score_rationale: out.score_rationale || \"Analysis completed successfully.\",\n        routine_plan: {\n            am: Array.isArray(out.routine_plan?.am) ? out.routine_plan.am : [],\n            pm: Array.isArray(out.routine_plan?.pm) ? out.routine_plan.pm : [],\n            frequencies: out.routine_plan?.frequencies || {}\n        },\n        products: Array.isArray(out.products) ? out.products.map((p)=>({\n                query: p.query || \"\",\n                matched_product: p.matched_product || p.name || \"\",\n                role: p.role || \"Skincare product\",\n                key_benefits: Array.isArray(p.key_benefits) ? p.key_benefits : [\n                    \"General skincare benefits\"\n                ],\n                cautions: Array.isArray(p.cautions) ? p.cautions : [],\n                ingredients_inci: p.ingredients_inci || \"unknown\",\n                citations: Array.isArray(p.citations) ? p.citations : [],\n                skin_impact: p.skin_impact || \"General product effects on skin\"\n            })) : originalProducts.map((p)=>({\n                query: p,\n                matched_product: p,\n                role: \"Skincare product\",\n                key_benefits: [\n                    \"General skincare benefits\"\n                ],\n                cautions: [],\n                ingredients_inci: \"unknown\",\n                citations: [],\n                skin_impact: \"General product effects on skin\"\n            })),\n        analysis: {\n            pairs: Array.isArray(out.analysis?.pairs) ? out.analysis.pairs : [],\n            global_observations: Array.isArray(out.analysis?.global_observations) ? out.analysis.global_observations : [\n                \"Routine analysis completed.\"\n            ],\n            suggestions: Array.isArray(out.analysis?.suggestions) ? out.analysis.suggestions : [],\n            makeup_skincare_synergy: Array.isArray(out.analysis?.makeup_skincare_synergy) ? out.analysis.makeup_skincare_synergy : []\n        }\n    };\n    // Frequencies guardrail for retinoids\n    const freq = res.routine_plan?.frequencies || {};\n    const lowerKeys = Object.keys(freq).reduce((acc, k)=>{\n        acc[k.toLowerCase()] = k;\n        return acc;\n    }, {});\n    const mentionsRetinoid = (s)=>/retin(al|ol)|retinoid/i.test(s);\n    const needsRamp = Object.keys(lowerKeys).some((k)=>mentionsRetinoid(k)) || (res.products || []).some((p)=>mentionsRetinoid(p.role) || mentionsRetinoid(p.matched_product));\n    if (needsRamp) {\n        const key = Object.keys(lowerKeys).find((k)=>mentionsRetinoid(k)) ?? \"retinal\";\n        const originalKey = lowerKeys[key] ?? key;\n        freq[originalKey] = \"start 2–3 nights/week for 2–3 weeks, then 3–4 nights/week if tolerated\";\n    }\n    // Ensure ALL compatibility pairs exist - generate missing ones\n    const expectedPairs = (res.products?.length || 0) * ((res.products?.length || 0) - 1) / 2;\n    const existingPairs = res.analysis?.pairs?.length || 0;\n    if (expectedPairs > 0) {\n        // Create a set of existing pairs for quick lookup (normalize to lowercase)\n        const existingPairSet = new Set();\n        (res.analysis?.pairs || []).forEach((pair)=>{\n            const normalizedPair = pair.between.map((p)=>p.toLowerCase().trim()).sort().join(\"|\");\n            existingPairSet.add(normalizedPair);\n        });\n        // Generate missing pairs\n        for(let i = 0; i < (res.products?.length || 0); i++){\n            for(let j = i + 1; j < (res.products?.length || 0); j++){\n                const product1 = res.products?.[i]?.matched_product || res.products?.[i]?.query || \"\";\n                const product2 = res.products?.[j]?.matched_product || res.products?.[j]?.query || \"\";\n                const normalizedPair = [\n                    product1.toLowerCase().trim(),\n                    product2.toLowerCase().trim()\n                ].sort().join(\"|\");\n                if (!existingPairSet.has(normalizedPair)) {\n                    // Determine if this is a makeup-skincare interaction\n                    const isMakeupSkincare = (product1.toLowerCase().includes(\"concealer\") || product1.toLowerCase().includes(\"blush\") || product1.toLowerCase().includes(\"mascara\") || product1.toLowerCase().includes(\"foundation\") || product1.toLowerCase().includes(\"lip\")) && (product2.toLowerCase().includes(\"sunscreen\") || product2.toLowerCase().includes(\"toner\") || product2.toLowerCase().includes(\"cleanser\") || product2.toLowerCase().includes(\"cream\") || product2.toLowerCase().includes(\"serum\")) || (product2.toLowerCase().includes(\"concealer\") || product2.toLowerCase().includes(\"blush\") || product2.toLowerCase().includes(\"mascara\") || product2.toLowerCase().includes(\"foundation\") || product2.toLowerCase().includes(\"lip\")) && (product1.toLowerCase().includes(\"sunscreen\") || product1.toLowerCase().includes(\"toner\") || product1.toLowerCase().includes(\"cleanser\") || product1.toLowerCase().includes(\"cream\") || product1.toLowerCase().includes(\"serum\"));\n                    res.analysis?.pairs?.push({\n                        between: [\n                            product1,\n                            product2\n                        ],\n                        flags: [\n                            {\n                                type: isMakeupSkincare ? \"makeup_skincare_interaction\" : \"ok_together\",\n                                severity: \"low\",\n                                why: isMakeupSkincare ? \"Makeup and skincare products can work well together when applied in the correct order.\" : \"Products appear compatible based on general formulation principles.\",\n                                sources: [\n                                    \"General skincare compatibility guidelines\"\n                                ]\n                            }\n                        ],\n                        suggestions: isMakeupSkincare ? [\n                            \"Apply skincare first, allow to absorb, then apply makeup.\"\n                        ] : [\n                            \"Monitor for any irritation when using together.\"\n                        ]\n                    });\n                }\n            }\n        }\n    }\n    // Citation reminder if benefits/cautions exist but citations missing\n    const missingCites = (res.products || []).some((p)=>(p.key_benefits.length > 0 || p.cautions.length > 0) && p.citations.length === 0);\n    if (missingCites) {\n        res.analysis?.suggestions?.push(\"Some product claims lack citations; prefer brand pages or INCIDecoder when listing INCI or ingredient-based benefits.\");\n    }\n    return res;\n}\nasync function POST(request) {\n    try {\n        const { products } = await request.json();\n        if (!products || !Array.isArray(products)) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Products array is required\"\n            }, {\n                status: 400\n            });\n        }\n        const apiKey = process.env.OPENAI_API_KEY;\n        if (!apiKey) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"OpenAI API key not configured\"\n            }, {\n                status: 500\n            });\n        }\n        const analyzeBody = {\n            model: \"gpt-4o-mini\",\n            temperature: 0.3,\n            response_format: {\n                type: \"json_object\"\n            },\n            tools: [\n                {\n                    type: \"web_search\"\n                }\n            ],\n            messages: [\n                {\n                    role: \"system\",\n                    content: 'You are a cosmetic chemist + skincare educator with expertise in both skincare and makeup formulations. CRITICAL: You MUST output a complete, consistent JSON response every time.             MANDATORY REQUIREMENTS:             - NEVER use emojis in any response text             - ALWAYS use proper capitalization for product names and ingredients             - If a product name seems incorrect or incomplete, research and provide the correct full product name             - Use web search to verify product names and ingredient lists when needed             1) ALWAYS include ALL fields in this EXACT schema:             {               \"routine_rating\": {                 \"barrier_safety\": number (0-5 scale),                 \"irritation_risk\": number (0-5 scale, lower is better),                 \"efficacy\": number (0-5 scale),                 \"compatibility\": number (0-5 scale),                 \"long_term_safety\": number (0-5 scale, optional)               },               \"score_rationale\": string (2-4 sentences),               \"routine_plan\": {                 \"am\": string[] (MUST have at least 1 item),                 \"pm\": string[] (MUST have at least 1 item),                 \"frequencies\": { [productOrActive: string]: string } (MUST have at least 1 frequency)               },               \"products\": [                 {                   \"query\": string,                   \"matched_product\": string,                   \"role\": string (specify if skincare or makeup),                   \"key_benefits\": string[] (MUST have at least 1 benefit),                   \"cautions\": string[] (can be empty array),                   \"ingredients_inci\": { \"names\": string[] } | \"unknown\",                   \"citations\": string[] (MUST have at least 1 citation),                   \"skin_impact\": string (how this product affects skin health)                 }               ],               \"analysis\": {                 \"pairs\": [                   {                     \"between\": [string, string],                     \"flags\": [                       {                         \"type\": \"ok_together\" | \"irritation_stack\" | \"redundancy\" | \"caution\" | \"makeup_skincare_interaction\" | \"pilling_risk\" | \"oxidization_risk\",                         \"severity\": \"low\" | \"medium\" | \"high\",                         \"why\": string,                         \"sources\": string[]                       }                     ],                     \"suggestions\": string[]                   }                 ],                 \"global_observations\": string[] (MUST have at least 2 observations),                 \"suggestions\": string[] (MUST have at least 1 suggestion),                 \"makeup_skincare_synergy\": string[] (how makeup and skincare work together)               }             }             CONSISTENCY RULES:             - CRITICAL: You MUST analyze compatibility between EVERY SINGLE product pair. If there are N products, you must include exactly N*(N-1)/2 pairs in the analysis.pairs array             - ALWAYS use the EXACT \"matched_product\" names from the products array when creating pairs - do NOT use the original query names             - ALWAYS include routine_plan.am and pm arrays (never empty)             - ALWAYS include global_observations (minimum 2 items)             - ALWAYS include suggestions (minimum 1 item)             - If unsure about ingredients, use \"unknown\" but still provide analysis             - For makeup products, analyze how they interact with skincare underneath             - Consider pilling, oxidization, and wear-time interactions             - EXAMPLE: For 3 products [A, B, C], you must include pairs: A+B, A+C, B+C             - EXAMPLE: For 4 products [A, B, C, D], you must include pairs: A+B, A+C, A+D, B+C, B+D, C+D             - IMPORTANT: Use the matched_product names consistently in all pairs to avoid duplicates             PRODUCT NAME CORRECTION:             - If user input has typos or incomplete names, research and provide the correct full product name             - Use proper brand capitalization (e.g., \\'The Ordinary\\' not \\'the ordinary\\')             - Include full product names (e.g., \\'CeraVe Hydrating Facial Cleanser\\' not just \\'cerave cleanser\\')             - Verify product names through web search when uncertain             frequencies examples:             { \"retinal\": \"start 2–3 nights/week for 2–3 weeks, then 3–4 nights/week if tolerated\",               \"salicylic acid\": \"1–3x/week\",               \"sunscreen\": \"every AM\",               \"foundation\": \"daily as needed\",               \"retinol cream\": \"2–3 nights/week\" }             MULTI-FACTOR RATING (0-5 scale per category):             - Barrier Safety: 5=excellent barrier support, 0=barrier damaging             - Irritation Risk: 5=high risk, 0=very gentle             - Efficacy: 5=highly effective for goals, 0=minimal benefit             - Compatibility: 5=perfect layering, 0=conflicting ingredients             - Long-term Safety: 5=sustainable for years, 0=unsafe long-term             MAKEUP-SPECIFIC ANALYSIS:             - Analyze how makeup ingredients affect skin health over time             - Consider comedogenic potential of makeup ingredients             - Evaluate how makeup interacts with skincare actives             - Look for potential pilling between skincare and makeup layers             - Check for ingredients that may oxidize or break down together             - Assess whether makeup provides additional skincare benefits (SPF, antioxidants, etc.)             - Consider removal requirements and their impact on skin barrier'\n                },\n                {\n                    role: \"user\",\n                    content: \"Evaluate this routine for compatibility using the exact schema above.\"\n                },\n                {\n                    role: \"user\",\n                    content: JSON.stringify({\n                        products\n                    })\n                }\n            ]\n        };\n        const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${apiKey}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(analyzeBody)\n        });\n        if (!response.ok) {\n            throw new Error(`OpenAI API error: ${response.status}`);\n        }\n        const data = await response.json();\n        // Extract the JSON content from the OpenAI response\n        if (data.choices && data.choices[0] && data.choices[0].message && data.choices[0].message.content) {\n            try {\n                const raw = JSON.parse(data.choices[0].message.content);\n                let out;\n                try {\n                    out = normalize(raw, products);\n                } catch (e) {\n                    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                        error: {\n                            message: \"Invalid model JSON\",\n                            details: String(e?.message || e)\n                        }\n                    }, {\n                        status: 422\n                    });\n                }\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(out);\n            } catch (parseError) {\n                console.error(\"Error parsing OpenAI response:\", parseError);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"Failed to parse analysis result\"\n                }, {\n                    status: 500\n                });\n            }\n        } else {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Invalid response from OpenAI\"\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error(\"Error in compatibility analysis:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to analyze compatibility\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/compatibility/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompatibility%2Froute&page=%2Fapi%2Fcompatibility%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompatibility%2Froute.ts&appDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshaivirau%2FSkincare%2Fskin-check&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();